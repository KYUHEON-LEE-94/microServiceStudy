apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak-mysql
  name: keycloak-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak-mysql
    spec:
      initContainers:
        - name: init-mysql
          image: mysql:8
          command: [ "sh", "-c", "test -d /var/lib/mysql/mysql || mysqld --initialize-insecure --user=mysql" ]
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: keycloak-mysql-claim0
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: keycloak
            - name: MYSQL_PASSWORD
              value: password
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_USER
              value: keycloak
          image: mysql:8
          name: keycloak-mysql
          command: [ "mysqld" ]
          args: [ "--explicit_defaults_for_timestamp" ]
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: keycloak-mysql-claim0
      restartPolicy: Always
      volumes:
        - name: keycloak-mysql-claim0
          persistentVolumeClaim:
            claimName: keycloak-mysql-claim0
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: keycloak-mysql-claim0
  name: keycloak-mysql-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}